import {
  S3Client,
  ListObjectsV2Command,
  CopyObjectCommand
} from '@aws-sdk/client-s3';

import {
  SESClient,
  SendEmailCommand
} from '@aws-sdk/client-ses';

const s3 = new S3Client({});
const ses = new SESClient({ region: process.env.AWS_REGION });

const DEV_BUCKET = process.env.DEV_BUCKET;
const PROD_BUCKET = process.env.PROD_BUCKET;
const NOTIFY_EMAIL = process.env.NOTIFY_EMAIL;

export const handler = async (event) => {
  try {
    const devList = await s3.send(new ListObjectsV2Command({ Bucket: DEV_BUCKET }));
    const prodList = await s3.send(new ListObjectsV2Command({ Bucket: PROD_BUCKET }));

    const devFiles = devList.Contents || [];
    const prodMap = new Map((prodList.Contents || []).map(obj => [obj.Key, new Date(obj.LastModified)]));

    const toCopy = devFiles.filter(obj => {
      const prodTime = prodMap.get(obj.Key);
      return !prodTime || new Date(obj.LastModified) > prodTime;
    });

    const copiedKeys = [];

    for (const file of toCopy) {
      await s3.send(new CopyObjectCommand({
        Bucket: PROD_BUCKET,
        Key: file.Key,
        CopySource: `${DEV_BUCKET}/${encodeURIComponent(file.Key)}`
      }));
      copiedKeys.push(file.Key);
    }

    // ✅ メール送信（同期後）
    if (NOTIFY_EMAIL && copiedKeys.length > 0) {
      const subject = `S3同期完了 - ${copiedKeys.length} 件のファイルが同期されました`;
      const bodyText = copiedKeys.join('\n');

      const emailParams = {
        Source: NOTIFY_EMAIL,
        Destination: { ToAddresses: [NOTIFY_EMAIL] },
        Message: {
          Subject: { Data: subject },
          Body: { Text: { Data: bodyText } }
        }
      };

      try {
        await ses.send(new SendEmailCommand(emailParams));
      } catch (err) {
        console.error('メール送信エラー:', err);
      }
    }

    return {
      statusCode: 200,
      headers: { 'Access-Control-Allow-Origin': '*' },
      body: JSON.stringify({ syncCount: copiedKeys.length })
    };
  } catch (err) {
    console.error('同期処理エラー:', err);
    return {
      statusCode: 500,
      headers: { 'Access-Control-Allow-Origin': '*' },
      body: JSON.stringify({ error: '同期に失敗しました' })
    };
  }
};
